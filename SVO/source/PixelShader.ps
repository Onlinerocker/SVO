float4 pixelMain(float4 position : SV_POSITION) : SV_TARGET
{
	float x = position.x - 640.0;
	x /= 640.0;

	float y = position.y - 360.0;
	y /= -360.0;

	x *= (1280.0/720.0);

	float3 cameraPos = float3(0, 0, 0);
	float3 dir = float3(x, y, 1);
	dir = normalize(dir);

	float3 curPos = cameraPos;

	float4 diffuse = float4(194.0/255.0, 249.0/255.0, 224.0/255.0, 1);
	float3 spherePos = float3(0, 0, 2);
	float sphereRad = 1;

	for(int i = 0; i < 20; ++i)
	{
		float d = length(spherePos - curPos) - sphereRad;

		if(abs(d) < 0.01f)
		{
			float l = dot(normalize(curPos - spherePos), normalize(float3(1.5, 1, -2)));
			float l1 = dot(normalize(curPos - spherePos), normalize(float3(-1, 0, 0)));
			float l2 = dot(normalize(curPos - spherePos), normalize(float3(0, -1, 0)));
			
			float4 color = diffuse * l;
			color += diffuse * l1 * 0.5;
			color += diffuse * l2 * 0.25;

			return color;
		}
		else curPos += (dir*d);
	}

	return float4(0.3, 0.3, 0.3 ,1);
}